/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    // Apply the application plugin to add support for building a CLI application
    application

    id("com.github.johnrengelman.shadow") version "5.1.0"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation("com.google.guava:guava:28.0-jre")

    // Use JUnit test framework
    testImplementation("junit:junit:4.12")

    // JAX-B dependencies for JDK 9+
    // https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j
    implementation ("javax.xml.bind:jaxb-api:2.2.11")
    implementation ("com.sun.xml.bind:jaxb-core:2.2.11")
    implementation ("com.sun.xml.bind:jaxb-impl:2.2.11")
    implementation ("javax.activation:activation:1.1.1")

    // AWS SDK
    implementation(platform("software.amazon.awssdk:bom:2.9.8"))
    implementation("software.amazon.awssdk:kinesis")
    // KPL
    implementation("com.amazonaws:amazon-kinesis-producer:0.14.3")

    // Logger
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:2.12.1")
    implementation("org.apache.logging.log4j:log4j-api:2.12.1")
    implementation("org.apache.logging.log4j:log4j-core:2.12.1")

    // Other
    implementation("com.github.javafaker:javafaker:1.0.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.9.10")
}

version = "1.1.0"

application {
    // Define the main class for the application
    mainClassName = "com.junoha.sample.kinesis.producer.KinesisProducerService"
}
